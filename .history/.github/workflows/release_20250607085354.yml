name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  test:
    name: Test before release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Run tests
      run: make test
    
    - name: Run lint
      run: make lint

  goreleaser:
    name: GoReleaser
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v5
      with:
        distribution: goreleaser
        version: latest
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Update installation script
      run: |
        # Update the installation script with the new version
        TAG=${GITHUB_REF#refs/tags/}
        sed -i "s/LATEST_VERSION=.*/LATEST_VERSION=\"$TAG\"/" scripts/install.sh
        
        # Commit updated script back to main branch
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git checkout main
        git add scripts/install.sh
        git commit -m "chore: update install script for $TAG" || exit 0
        git push origin main

  update-homebrew:
    name: Update Homebrew
    runs-on: ubuntu-latest
    needs: goreleaser
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Update Homebrew formula
      uses: mislav/bump-homebrew-formula-action@v3
      with:
        formula-name: fail2ban-notify
        formula-path: Formula/fail2ban-notify.rb
        homebrew-tap: ${{ github.repository_owner }}/homebrew-tap
        download-url: https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/fail2ban-notify_Darwin_x86_64.tar.gz
        commit-message: |
          {{formulaName}} {{version}}
          
          Created by https://github.com/mislav/bump-homebrew-formula-action
      env:
        COMMITTER_TOKEN: ${{ secrets.COMMITTER_TOKEN }}